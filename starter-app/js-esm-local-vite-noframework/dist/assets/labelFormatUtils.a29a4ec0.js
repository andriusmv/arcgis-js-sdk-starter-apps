import{n as e,gp as t,gq as r,gr as a,gs as n,eO as s,gt as l,a as u,gu as i}from"./vendor.d9ce5f39.js";const o=e.getLogger("esri.layers.support.labelFormatUtils"),c={type:"simple",evaluate:()=>null},p={getAttribute:(e,t)=>e.field(t)};async function d(e,a,n){if(!e||!e.symbol)return c;const s=e.where,l=t(e),d=s?await import("./WhereClause.66c5b421.js"):null;let g;if("arcade"===l.type){const e=await r(l.expression,n,a);g={type:"arcade",evaluate(t){try{const r=e.evaluate({$feature:"attributes"in t?e.repurposeFeature(t):e.repurposeAdapter(t)});if(null!=r)return r.toString()}catch(r){o.error(new u("bad-arcade-expression","Encountered an error when evaluating label expression for feature",{feature:t,expression:l}))}return null},needsHydrationToEvaluate:()=>null==i(l.expression)}}else g={type:"simple",evaluate:e=>l.expression.replace(/{[^}]*}/g,(t=>{const r=t.slice(1,-1),n=a.get(r);if(!n)return t;let s=null;return"attributes"in e?e&&e.attributes&&(s=e.attributes[n.name]):s=e.field(n.name),null==s?"":f(s,n)}))};if(s){let e;try{e=d.WhereClause.create(s,a)}catch(y){return c}const t=g.evaluate;g.evaluate=r=>{const a="attributes"in r?void 0:p;return e.testFeature(r,a)?t(r):null}}return g}function f(e,t){if(null==e)return"";const r=t.domain;if(r)if("codedValue"===r.type||"coded-value"===r.type){const t=e;for(const e of r.codedValues)if(e.code===t)return e.name}else if("range"===r.type){const t=+e,a="range"in r?r.range[0]:r.minValue,n="range"in r?r.range[1]:r.maxValue;if(a<=t&&t<=n)return r.name}let u=e;return"date"===t.type||"esriFieldTypeDate"===t.type?u=a(u,n("short-date")):s(t)&&(u=l(+u)),u||""}export{d as createLabelFunction,f as formatField};
