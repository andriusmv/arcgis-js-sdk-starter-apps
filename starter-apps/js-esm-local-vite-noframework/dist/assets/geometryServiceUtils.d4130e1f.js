import{o as e,a as r,fj as t}from"./vendor.d9ce5f39.js";import{a as o}from"./ProjectParameters.bc1897ab.js";async function a(o=null,a){if(e.geometryServiceUrl)return new((await import("./GeometryService.1015a95b.js")).default)({url:e.geometryServiceUrl});if(!o)throw new r("internal:geometry-service-url-not-configured");let i;if(i="portal"in o?o.portal||t.getDefault():o,await i.load({signal:a}),i.helperServices&&i.helperServices.geometry&&i.helperServices.geometry.url)return new((await import("./GeometryService.1015a95b.js")).default)({url:i.helperServices.geometry.url});throw new r("internal:geometry-service-url-not-configured")}async function i(e,t,i=null,n){const l=await a(i,n),c=new o;c.geometries=[e],c.outSpatialReference=t;const s=await l.project(c,{signal:n});if(s&&Array.isArray(s)&&1===s.length)return s[0];throw new r("internal:geometry-service-projection-failed")}export{a as create,i as projectGeometry};
